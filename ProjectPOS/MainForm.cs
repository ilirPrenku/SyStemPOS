using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Forms;
using System.Management;
using SystemPOS;

namespace ProjectPOS
{
    public partial class MainForm : Form
    {
       

        #region

        SqlConnection con = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\ProgramData\LocalDataBase.mdf;Integrated Security=True;Connect Timeout=30");
        SqlCommand cmd;
        
        List<Products> myProducts = new List<Products>();
        List<Products> soldProducts = new List<Products>();
        double sum = 0;
        double cashBackTotal = 0;
        int totalItemsCounter = 0;
        int multiplier = 0;
        string salesID = "";
        public string barCodeIdentifier = "2500"; //Default Barcode identifier [ Scale Barcode starts with 2500 ]



        public MainForm()
        {

            InitializeComponent();
            InitializeProductsFromDB();
            gridViewColumns();

        }

       

        private void gridViewColumns()
        {
            dataGridViewMain.ColumnCount = 5;

            dataGridViewMain.Columns[0].Name = "ID";
            dataGridViewMain.Columns[1].Name = "BARCODE";
            dataGridViewMain.Columns[2].Name = "PRODUCT NAME";
            dataGridViewMain.Columns[3].Name = "PRODUCT PRICE";
            dataGridViewMain.Columns[4].Name = "";
        }



        //With this Function we populate our myProducts Object with new DATA from the SQL Database
        //where Prices,Scan Codes,Names were updated
        public void InitializeProductsFromDB()
        {
           
            SqlCommand cmd = new SqlCommand("select * from MyTable", con);
            con.Open();
            SqlDataReader reader = cmd.ExecuteReader();

            myProducts.Clear();

            while (reader.Read())
            {
                Products prod = new Products();
                prod.Id = (int)reader["id"];
                prod.Barcode = (string)reader["productBarcode"];
                prod.Name = (string)reader["productName"];
                //  prod.Price = (double)reader["productPrice"];
                prod.Price = Convert.ToDouble(reader["productPrice"]);

                myProducts.Add(prod);
            }

            con.Close();

        }
        #endregion
        private void txtBoxInput_KeyDown(object sender, KeyEventArgs e)
        {


            if(e.KeyCode == Keys.Right)
            {
                listBox.Focus();
            }
            //Here we check if there is new Input Data and also if DataGirdView is Empty
            //Soon as we got the first Row on DGV or PRODUCT, a new ID is generated
            //To monitor the complete list of products where bought by 1 customer.
            //the ID is generated by actual Days,Hours,Minutes,Seconds..
            #region generete Unique ID for sales

            if (dataGridViewMain.Rows.Count == 1 && dataGridViewMain.Rows != null && dataGridViewMain.Rows.Count < 2)
            {
                salesID =  DateTime.Now.ToString("ddHHmmss");
                lblSalesId.Text = salesID;
            }
            else if(dataGridViewMain.Rows.Count < 1 && dataGridViewMain.Rows == null)
            {
                salesID = "";
                lblSalesId.Text = salesID;
            }


            #endregion


            if (e.KeyCode == Keys.Back && string.IsNullOrEmpty( txtBoxInput.Text))
            {
                //If DatagridView is not Empty
                //we can delete the last added product to the dataGridView everytime we hit the Backspace Key
                //and Total Sum of all Products and Total amount of Products will be updated.
                #region deleting last Row/Product added in DGV 

                try
                {
                    if (dataGridViewMain.Rows.Count > 1 && dataGridViewMain.Rows != null)
                    {
                        dataGridViewMain.Rows.RemoveAt(dataGridViewMain.Rows.Count - 2);

                        sum = dataGridViewMain.Rows.Cast<DataGridViewRow>().Sum(t => Convert.ToDouble(t.Cells[3].Value));
                        lblTotalPrice.Text = sum.ToString("0.00") + "€";
                        if (soldProducts.Any())
                        {
                            soldProducts.RemoveAt(soldProducts.Count - 1);
                        }

                    }
                }
                catch (Exception)
                {

                    MessageBox.Show("The Input Data is wrong");
                }
               


               
                
            }
            #endregion

            
            ////////////////////////////////////////////////////////
            if (e.KeyCode == Keys.Return && txtBoxInput.Text.Length <= 2 && !string.IsNullOrEmpty(txtBoxInput.Text) && (dataGridViewMain.Rows.Count > 1 && dataGridViewMain.Rows != null))
            {
                //Here We will Multiply the last added product in DGV, so we dont have to scan 
                //some products in quanities 100 times.
                #region Multiply Items in Stacks
                try
                {
                    multiplier = Convert.ToInt32(txtBoxInput.Text);



                    string id = dataGridViewMain.Rows[dataGridViewMain.RowCount - 2].Cells[0].Value.ToString();
                    string barcode = dataGridViewMain.Rows[dataGridViewMain.RowCount - 2].Cells[1].Value.ToString();
                    string name = dataGridViewMain.Rows[dataGridViewMain.RowCount - 2].Cells[2].Value.ToString();
                    string price = dataGridViewMain.Rows[dataGridViewMain.RowCount - 2].Cells[3].Value.ToString();

                    // MessageBox.Show("id = " + id + " barcode = " + barcode + " name = " + name + " price = " + price + "");

                    for (int i = 0; i < multiplier-1; i++)
                    {


                        string[] items = new string[] { id, barcode, name, price };
                        dataGridViewMain.Rows.Add(items);
                    }
                    sum = dataGridViewMain.Rows.Cast<DataGridViewRow>().Sum(t => Convert.ToDouble(t.Cells[3].Value));
                    lblTotalPrice.Text = sum.ToString("0.00") + "€";




                    if ((dataGridViewMain.RowCount - 1) == 1)
                    {
                        lblTotalItems.Text = (dataGridViewMain.RowCount - 1).ToString() + " Product";
                    }
                    else
                        lblTotalItems.Text = (dataGridViewMain.RowCount - 1).ToString() + " Products";

                    txtBoxInput.Text = "";
                }
                catch (Exception)
                {

                    MessageBox.Show("The Input Data is wrong");
                }
              
                #endregion

            }
           

            if (e.KeyCode == Keys.Return)
            {
                if (txtBoxInput.Text.Contains(barCodeIdentifier))
                {
                    try
                    {


                    #region Barcode with weight scannner Input
                    ////////////////////////////////////////////////////
                    string formattedPrice = txtBoxInput.Text.Substring(txtBoxInput.Text.Length - 6);
                    formattedPrice = formattedPrice.Insert(2, ".");

                    string formattedProduct = txtBoxInput.Text.Substring(0, 7);

                    double kilogram = Convert.ToDouble(formattedPrice);


                    foreach (var item in myProducts)
                    {
                        if (formattedProduct == item.Barcode)
                        {

                            string[] items = new string[] { item.Id.ToString(), item.Barcode, item.Name, (kilogram * item.Price).ToString("0.00") };

                            dataGridViewMain.Rows.Add(items);

                            sum = dataGridViewMain.Rows.Cast<DataGridViewRow>().Sum(t => Convert.ToDouble(t.Cells[3].Value));

                            totalItemsCounter++;
                            if (totalItemsCounter == 1)
                            {
                                lblTotalItems.Text = totalItemsCounter.ToString() + " Product";
                            }
                            else
                                lblTotalItems.Text = totalItemsCounter.ToString() + " Products";

                            lblTotalPrice.Text = sum.ToString("0.00") + "€";
                            txtBoxInput.Clear();
                        }

                    }
                        #endregion

                    }
                    catch (Exception )
                    {

                        MessageBox.Show("The Input Data is wrong");
                    }
                }
                else if (txtBoxInput.Text.Length > 3 && !txtBoxInput.Text.Contains(barCodeIdentifier))
                {
                    try
                    {


                    #region Barcod Input and Name Input for Single Items
                    ////////////////////////////////////////////////////
                    foreach (var item in myProducts)
                    {


                        if ((txtBoxInput.Text == item.Barcode || txtBoxInput.Text == item.Name) && !txtBoxInput.Text.Contains("2500"))
                        {





                            sum += item.Price;
                            string[] items = new string[] { item.Id.ToString(), item.Barcode, item.Name, item.Price.ToString("0.00") };

                            dataGridViewMain.Rows.Add(items);

                            sum = dataGridViewMain.Rows.Cast<DataGridViewRow>().Sum(t => Convert.ToDouble(t.Cells[3].Value));

                            lblTotalPrice.Text = sum.ToString("0.00") + "€";
                            totalItemsCounter++;
                            if (totalItemsCounter == 1)
                            {
                                lblTotalItems.Text = totalItemsCounter.ToString() + " Product";
                            }
                            else
                                lblTotalItems.Text = totalItemsCounter.ToString() + " Products";

                            txtBoxInput.Clear();


                        }

                    }
                        #endregion

                    }
                    catch (Exception)
                    {

                        MessageBox.Show("The Input Data is wrong");
                    }
                }

                

                #region Dunno Test
               
                #endregion


            }
            else if (e.KeyCode == Keys.Escape)
            {
                try
                {


                #region Press Escape to Save sold items to DB
                //////////////////////////////////////////////////////
                if (dataGridViewMain.Rows.Count > 1 && dataGridViewMain.Rows != null)
                {
                  
                    for (int i = 0; i < dataGridViewMain.Rows.Count - 1; i++)
                    {
                        cmd = new SqlCommand("insert into SalesTable(productBarcode,productName,productPrice,productSold,clientId) values(@BARCODE,@NAME,@PRICE,@SOLD,@CL)", con);

                       // cmd.Parameters.AddWithValue("@ID", dataGridViewMain.Rows[i].Cells[0].Value);
                        cmd.Parameters.AddWithValue("@BARCODE", dataGridViewMain.Rows[i].Cells[1].Value);
                        cmd.Parameters.AddWithValue("@NAME", dataGridViewMain.Rows[i].Cells[2].Value);
                        cmd.Parameters.AddWithValue("@PRICE", dataGridViewMain.Rows[i].Cells[3].Value);
                        cmd.Parameters.AddWithValue("@SOLD", DateTime.Now.Date.ToShortDateString());
                        cmd.Parameters.AddWithValue("@CL", salesID);



                        con.Open();
                        cmd.ExecuteNonQuery();
                        con.Close();
                    }
                }
                else
                {
                    MessageBox.Show("Nuk mund te ruhet asgje ne shitje sepse nuk ke produkte te listuara.");
                }

                    totalItemsCounter = 0;
                    sum = 0;
                    if (totalItemsCounter == 1)
                    {
                        lblTotalItems.Text = totalItemsCounter.ToString() + " Product";
                    }
                    else
                        lblTotalItems.Text = totalItemsCounter.ToString() + " Products";

                    dataGridViewMain.Rows.Clear();
                    lblTotalPrice.Text = "00.00 €";
                    lblMoneyBack.Text = "";
                    txtBoxInput.Clear();
                    txtBoxCash.Clear();
                    cashBackTotal = 0;
                    pictureBox1.Hide();
                    #endregion

                }
                catch (Exception)
                {

                    MessageBox.Show("The Input Data is wrong");
                }
            }


        }

        #region Top Menu Buttons
        private void button1_Click(object sender, EventArgs e)
        {
            var DBWindow = new ManageProductsForm();
            DBWindow.Show();

            licenseCheck();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            var Sales = new SalesForm();
            Sales.Show();

            licenseCheck();
        }




        #endregion

        #region alskjdasd
        private void txtBoxCash_KeyDown(object sender, KeyEventArgs e)
        {

                try
                {


                if (e.KeyCode == Keys.Enter)
                {
                    pictureBox1.Show();
                    cashBackTotal = (double.Parse(txtBoxCash.Text) - sum);
                    lblMoneyBack.Text = cashBackTotal.ToString("0.00") + "€";
                    lblKusuri.Show();

                }
                else if (e.KeyCode == Keys.Escape)
                {
                    lblKusuri.Hide();
                    pictureBox1.Hide();
                    cashBackTotal = 0;
                    txtBoxCash.Clear();
                    lblMoneyBack.Text = "";
                }

                }
                catch (Exception)
                {

                    MessageBox.Show("The Input Data is wrong");
                }
          



        }

        private void btnRefreshDB_Click(object sender, EventArgs e)
        {
            InitializeProductsFromDB();
        }


        private void button3_Click(object sender, EventArgs e)
        {

            var about = new About();

            about.Show();

            

        }

        private void licenseCheck()
        {
            string licenseFile = "license.key";
            string licenseCheck = "";
            string license = "sk" + getHWID();
            if (File.Exists(licenseFile))
            {
                StreamReader reader = new StreamReader(licenseFile);


                licenseCheck = reader.ReadLine();
                if(licenseCheck == license)
                {
                    //License is OK and you can go on with code here.....
                }
                else
                {

                   MessageBox.Show("This Product has no License , Contact Support for License");


                    System.Threading.Thread.Sleep(10000);
                    System.Windows.Forms.Application.Exit();
                }

            }
            else
            {

                DialogResult dialogresult = MessageBox.Show("Your License File is Missing : License.key");
                System.Threading.Thread.Sleep(10000);
                System.Windows.Forms.Application.Exit();
            }




        }

        private string getHWID()
        {
            var mbs = new ManagementObjectSearcher("Select ProcessorId From Win32_processor");
            ManagementObjectCollection mbsList = mbs.Get();
            string HWID = "";
            foreach (ManagementObject mo in mbsList)
            {
                HWID = mo["ProcessorId"].ToString();
                break;
            }
            return HWID;
        }


        private void btnNormal_Click(object sender, EventArgs e)
        {
            panelTotalPrice.BackColor = DefaultBackColor;
            lblTotalPrice.BackColor = DefaultBackColor;
        }

        private void btnRed_Click(object sender, EventArgs e)
        {
            panelTotalPrice.BackColor = System.Drawing.Color.Red;
            lblTotalPrice.BackColor = System.Drawing.Color.Red;
        }

        private void btnLime_Click(object sender, EventArgs e)
        {
            panelTotalPrice.BackColor = System.Drawing.Color.Lime;
            lblTotalPrice.BackColor = System.Drawing.Color.Lime;
        }

        private void txtBoxInput_TextChanged(object sender, EventArgs e)
        {
            
            //MessageBox.Show("Text changed");
            listBox.Items.Clear();

            if (!string.IsNullOrEmpty(txtBoxInput.Text))
            {
                cmd = new SqlCommand("select * from MyTable where productName like '" + txtBoxInput.Text + "%' ", con);
                con.Open();
                SqlDataReader rd = cmd.ExecuteReader();

                while (rd.Read())
                {
                    listBox.Items.Add(rd["productName"].ToString());
                }


                rd.Close();
                con.Close();
            }

            if (listBox.Items.Count == 0)
            {
                listBox.Size = new System.Drawing.Size(120, 29);
            }
            else if (listBox.Items.Count > 0)
            {
                listBox.Size = new System.Drawing.Size(120, 200);
            }


        }


        private void listBox_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            txtBoxInput.Text = listBox.SelectedItem.ToString();
            txtBoxInput.Focus();
        }

        private void listBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Left)
            {
                txtBoxInput.Focus();
            }
            if(e.KeyCode == Keys.Enter && listBox.SelectedItem != null)
            {
                txtBoxInput.Text = listBox.SelectedItem.ToString();
                txtBoxInput.Focus();
            }
        }

        private void btnSettings_Click(object sender, EventArgs e)
        {
            var settings = new ProgSettings();

            

            settings.Show();
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            if (ProgSettings.companyIcon != string.Empty)
            {

              Icon = new System.Drawing.Icon(ProgSettings.companyIcon);
            }



            if (ProgSettings.companyName != string.Empty)
            {
              Text = ProgSettings.companyName;
            }



            if (ProgSettings.barCodeIdent != string.Empty)
            {
                barCodeIdentifier = ProgSettings.barCodeIdent;
            }


        }

        private void txtBoxManual_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter && ( txtBoxManual.Text != string.Empty && txtBoxManual.Text.Contains('.')))
            {
                string[] items = new string[] { "Manual", "Manual", "Manual", txtBoxManual.Text };

                dataGridViewMain.Rows.Add(items);

                sum = dataGridViewMain.Rows.Cast<DataGridViewRow>().Sum(t => Convert.ToDouble(t.Cells[3].Value));

                lblTotalPrice.Text = sum.ToString("0.00") + "€";
                totalItemsCounter++;
                if (totalItemsCounter == 1)
                {
                    lblTotalItems.Text = totalItemsCounter.ToString() + " Product";
                }
                else
                    lblTotalItems.Text = totalItemsCounter.ToString() + " Products";

                txtBoxInput.Clear();
                txtBoxManual.Clear();
            }

            #region generete Unique ID for sales

            if (dataGridViewMain.Rows.Count == 1 && dataGridViewMain.Rows != null && dataGridViewMain.Rows.Count < 2)
            {
                salesID = DateTime.Now.ToString("ddHHmmss");
                lblSalesId.Text = salesID;
            }
            else if (dataGridViewMain.Rows.Count < 1 && dataGridViewMain.Rows == null)
            {
                salesID = "";
                lblSalesId.Text = salesID;
            }


            #endregion
        }
    }
    #endregion
}
